# My bash shell commands  

My alias saved to .bashrc:   

cpy:   "cd /mnt/c/python"
uwork: "cd ~/work"  
adlpy: "deactivate conda; activate conda dlpy; cd ~/work/deep-learning"

To goto C drive from Ubuntu:  
cd /mnt/c/python 
cd /mnt/c

To goto Ubuntu drive from C:  
cd ~ or cd $home 
cd ~/work  (Need slash before "work")

current directory:  ./  or .   
parent directory:   ../  or  ..  

Ubuntu $home: ~ 
$home/work/deep-learning:  ~/work/deep-learning

move:  mv  
make directory:   mkdir  
delete, remove:   rm   
delete directory: rm -rf  (recursive force)  
copy:  cp <from> <to>  


CAT, Concatenate command:  
  * View file:  cat file1.txt 
  * View multiple files:  cat file1.txt file2.txt  
  * View all text files in folder:  cat *.txt  
  * View long file with more (pipe):  cat file1.txt | more 
    (Enter or downarrow for more, control-C to exit)  
  * View with line numbers:  cat -n file3.txt 
  * View with supressed multiple empty lines:   cat -s newfile.txt 
  * View content in reverse order:  tac file1.txt    
  No quotations around file name.  All works.  
  --- 
  * Create a new file:   cat > newfile.txt  
    (empty line to type text, Control-C to exit)  
  * Copy contents of file1 to newfile:  cat file1.txt > newfile.txt  
    (Also works with quotes, cat "file1.txt" > "newfile1.txt" )
  * Merge files:   cat "file1.txt" "file2.txt" "file3.txt" > "mergedfile.txt"  
    (Also works without quotes around filenames!)
  * Append file (double arrow):   cat "file2.txt" >> "file1.txt"  
    (Also works without quotes around filenames!) 
    - Quotes seem optional around file names.  Don't use.  
  
ECHO command, generally used by batch or script files to print something on the terminal. 
Syntax:  echo [options] [strings]
  * Print output to screen:  echo "Hello"  
  * Redirect output to file:  echo "Test Page" > file1.txt  
  * Print all files in folder:  echo *  
  * Print all jpg files:  echo *.jpg  
  * Use escaped character interpretation:  
    echo -e "Test \bBachspaced Word" 
    >TestBackspaced Word. 
    echo -e "Test \nNewline Word."                         
    >Test                                                                                                  
    >Newline Word.
    
To add a line of text to a new file, use ECHO.  To view files use CAT.  
   * echo "Hello World!" > newfile.txt  
   * cat newfile.txt  
     (echo newfile.txt just prints to screen "newfile.txt")  
   * cat to add multiline text.  
     cat > newfile2.txt 
     >type stuff here, then control-c to exit.  
     
